@use 'vars.scss' as *;

$fieldHeight: 75vh;
$engineColWidth: 8rem;

.settings {
    display: flex;
    flex-direction: row;
    gap: 1rem;

    .settings-menu {
        width: 25%;

        ul {
            list-style-type: none;
            display: flex;
            flex-direction: column;
            gap: var(--pad);
            padding-left: var(--pad);
            margin-top: 0;

            .selected-menu-item button, button:hover {
                // border-bottom: 2px solid var(--fg);
                text-decoration: underline;
                text-decoration-thickness: 2px;
            }

            button {
                border: none;
                padding: 0;
                margin: 0;
                width: min-content;
                border-radius: 0;
            }
            .list-subheading {
                font-size: larger;
            }
            &>li > ul {
                margin-top: var(--pad);
            }
            
            
        }
    }
}
.settings-form {
    padding-left: 3px;
    display: flex;
    flex-direction: column;
    gap: calc(var(--pad) * 1);
    width: 100%;
    font-size: large;
    
    .file-or-folder > .controls-row {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    .filename {
        width: 80%;
        overflow: scroll;
    }
    .warning {
        color: var(--warning);
        font-style: italic;
    }
    label {
        font-weight: bold;
        
    }
    input, select {
        font-size: large;  
    }
    select {
        width: min-content;
    }
    button:hover {
        background-color: var(--select-mix);
    }

    .fields {
        display: flex;
        flex-direction: column;
        gap: calc(2.5 * var(--pad));
        height: $fieldHeight;
        border: thin solid;
        border-radius: 5px;
        padding: calc(.5 * var(--pad));
        overflow: auto;
    }
}

.save-settings {
    display: flex;
    gap: var(--pad);
    align-items: center;
    justify-self: flex-end;
}

.tts-browse-voices {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: 100%;
    
    
    .voice-filters {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        
        div {
            display: flex;
            flex-direction: row;
            
            &>:first-child {
                width: 30%;
            }
            
        }
        div:has(>select), div:has(>input) {
            display: flex;
            gap: 0.5rem;
        }
        
    }
    .voice-selection {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    .voice-details {
        display: flex;
        flex-direction: column;
        
        gap: 1rem;
        
        p.selected-voice {
            margin-top: .25rem;
            margin-bottom: 0;
            font-style: italic;
        }
        
        button, label, input {
            font-weight: normal;
            font-size: 1.1rem;
            border: thin solid;
            padding: 5px;
            text-decoration: none;
        }

        .voice-preview {
            display: flex;
            flex-direction: column;
            
            gap: 1rem;
            &>* {
                height: 1rem;
            }
            input {
                width: 70%;
            }
        }
    }
    p > select {
        margin-left: .5rem;
        margin-right: .5rem;
    }
    
    
    p > button {
        margin-left: 1rem;
    }
    button {
        font-size: medium;
        border: none;
        text-decoration: underline;
        padding: 0;
        &:hover {
            background: none;
            cursor: pointer;
        }
    }
    
}
.tts-preferred-voices {
    display: flex;
    flex-direction: column;
    
    div[role=region] {
        overflow: auto;
        height: 90%;
    }
    p {
        margin-block-start: 0;
        select {
            margin-left: 5px;
            margin-right: 5px;
        }
    }

    table {
        font-size: smaller;
        border-collapse: collapse;
        width: 100%;
        th {
            background-color: var(--fg);
            color: var(--bg);
            position: sticky;
            top: 0;
            padding: 5px;
        }
        td {
            padding: .25rem;
            padding-left: .5rem;
            padding-right: .5rem;
        }
        
        label {
            font-weight: normal;
        }
        td.actions {
            label {
                white-space: nowrap;
            }
            div:has(input) {
                display: flex;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
            }
        }
        td.voiceName {
            max-width: 8rem;
            white-space: wrap;
        }
        button {
            height: min-content;
            padding: 2px;
        }
    }
}
.tts-engines-config {
    padding: 0;
    .desc {
        font-style: italic;
    }
    ul {
        list-style-type: none;
    }
    &>ul {
        display: flex;
        flex-direction: column;
        gap: calc(var(--pad) * 1.5);
        margin-top: calc(var(--pad) * 1);
        padding: 0;
        /* don't show engine messages if the engine is disabled. they don't make sense. */
        li:has(input:invalid) .disabled {
            display: none;
        }
        &>li {
            font-weight: bold;
            font-size: larger;
            &>ul {
                font-size: medium;
                margin-top: calc(var(--pad) * 1);
                display: flex;
                flex-direction: column;
                gap: var(--pad);

                &>li {
                    display: flex;
                    flex-direction: row;

                    label {
                        width: 5rem;
                    }
                    button, .input, .input input {
                        width: 70%;
                    }
                }
                .required-field-message, .error, .disabled {
                    font-style: italic;
                    font-weight: normal;
                    color: var(--warning);
                    details {
                        width:100% !important;
                        summary {
                            width:100% !important;
                        }
                    }
                }
                .connecting {
                    font-style: italic;
                    font-weight: normal;
                }
            }
        }

        
    }
    .Connected::after {
        content: ' ✅';
    }
    .Disconnected::after {
        content: ' ❌';
    }
    .required-field-message {
        display: block;
    }
}
.tts-more-options {
    display: flex;
    flex-direction: column;
    gap: calc(1.5 * var(--pad));

    .note {
        font-style: italic;
        padding-top: 0;
        margin-top: 2px;
    }
    label {
        display: block;
    }
    &>div {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }
    input[type=range] {
        width: 10rem;
    }
    .reset-speech-rate {
        width: min-content;
        height: min-content;
        font-size: medium;
        padding: 2px;
        
    }
    .speech-rate-controls {
        display: flex;
        flex-direction: row;
    }
}
pre {
    font-size: smaller;
    background-color: lightyellow;
    color: black;
    border-radius: 5px;
    padding: 5px;
}