@use 'vars.scss' as *;
@use 'tabs.scss' as *;
@use 'settings.scss' as *;

body {
    color: var(--fg);
    background-color: var(--bg);

    font-family: var(--font-family);
    font-size: var(--font-size);

    margin: calc(.25 * var(--pad));
    border-color: var(--fg-mix);
}
h2, h3 {
    font-weight: normal;
}

button {
    color: inherit;
    background-color: inherit;
    
    font-size: larger;

    width: min-content;
    height: min-content;

    padding: calc(var(--pad)/2);
    
    border: thin solid;
    border-color: inherit;
    border-radius: var(--border-radius);
    
    white-space: nowrap;
}

input {
    border-radius: var(--border-radius);
    display: block;
    height:calc(1.5 * var(--font-size)); 
}
input:invalid {
    border-color: var(--error-bg);
}
input[type=checkbox] {
    width: calc(1.5 * var(--font-size));
    height: calc(1.5 * var(--font-size));
}

select {
    background-color: var(--bg);
    color:var(--fg);
}


.form-field {
    display: flex;
    flex-flow: column;
    gap: calc(var(--pad)/2);
    // aligned label and input
    .oneline {
        display: inline-block;
        
        input {
            vertical-align: middle;
            display: inline
        }

        span {
            vertical-align: middle;
        }
    }
}
.file-or-folder {
    input {
        width: 100%;
    }
    button {
        padding-top: 1px;
        padding-bottom: 1px;
    }
}
.description {
    font-style: italic;
    font-size: smaller;

    // the markdown descriptions coming from the scripts can use paragraph tags, this lines them up at the top
    p:first-child {
        margin-top: 0 !important;
    }
}
.filelink {
    color: var(--fg);
}

[role=tabpanel], main.about {
    border-radius: var(--border-radius);
    // i.e. a button that's not a tab but rater in the main body of the tab panel
    button {
        transition: all .2s ease-in;
    }
    
    button:hover {
        background-color: var(--select-mix);
    }

    a {
        color: var(--fg);
    }
    a:hover {
        text-decoration-thickness: 3px;
        background: var(--fg-mix-fade);
    }

    ul {
        list-style-type: none;
        padding: 0;
        display: flex;
        flex-direction: column;
        gap: calc(var(--pad)/2);
    }

    .file-list li ul {
        padding-left: 1em;
    }
}

.fixed-height-layout {
    display: flex;
    flex-direction: column;
    gap: calc(1.5 * var(--pad));
    max-height: var(--tab-panel-height);
    min-height: var(--tab-panel-height);
}

// the tab panel "header" 
.header {
    line-height: 1.2;
    display: grid;
    grid-template-columns: 60% auto;
    font-size: large;

    // indent the contents not the heading
    div > *:not(h1) {
        margin-left: var(--pad);
    }
    h1 {
        white-space: nowrap;
    }
    h1 span {
        font-size: small;
        display: block;
    }

    button {
        font-size: larger;
        font-weight: normal;
        align-self: center;
        cursor: pointer;
    }
}

.job {
    .status {
        font-size: large;
        font-weight: bold;
        width: min-content;
        white-space: nowrap;
    }

    .job-settings {
        ul {
            padding: calc(var(--pad)/2);
            border-radius: var(--border-radius);
            gap: calc(var(--pad)/2);
            height: 50vh;
            overflow: scroll;
        }

        li {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            border-bottom: thin solid var(--fg-mix-fade);
            gap: calc(var(--pad)/2);

            span:first-of-type {
                max-width: 50%;
            }
            span:last-of-type {
                font-family: var(--fw-font-family);
            }
        }
    }

    .details {
        flex-grow: 2;
        gap: calc(var(--pad) * 2);
        display: flex;
        flex-direction: column;
        overflow-y: scroll;
        

        .scrolling-area {
            overflow-y: scroll;
            gap: var(--pad);
            display: flex;
            flex-direction: column;
        }

        .job-messages {
            ul {
                font-family: var(--fw-font-family);
                margin-left: var(--pad);
                .error {
                    background-color: var(--error-bg);
                    color: var(--error-fg);
                    padding: 3px;
                    margin: -3px;
                }
                .info {
                    color: var(--fg);
                }
                .warning {
                    color: var(--warning);
                }
                .debug {
                    color: var(--fg);
                }
                .trace {
                    color: var(--fg);
                }
            }
            
            ul ul {
                
                padding-left: var(--pad);
                border-left: 1px solid var(--fg-mix);
                border-bottom: 1px solid var(--fg-mix);
                margin-bottom: calc(var(--pad) * 0.5);
                margin-top:  calc(var(--pad) * 0.5);
                margin-left: var(--pad);
                :last-child {
                    margin-bottom: calc(var(--pad));
                }
            }
        }

        .job-results {
            width: min-content;
            white-space: nowrap;

            .file-list {
                margin-left: var(--pad);
            }
            /* the outer list item, e.g. "Results folder" */
            .file-list > li {
                display: flex;
                flex-direction: column;
                gap: var(--pad);
            }

            /* the inner list e.g. .filelist > ul > li.named-result */
            li.named-result {
                display: flex;
                flex-direction: row;
                gap: var(--pad);
                width: 80vw;
                flex-wrap: wrap;
                
                &> * {
                    flex-grow: 1;
                    flex-basis: calc(( 30rem - 100%) * 999);
                }
                  
                &> :nth-last-child(n+ 5),
                &> :nth-last-child(n+ 5) ~ * {
                flex-basis: 100%;
                }
                    

                .nicename {
                    font-weight: bold;
                }
                .description {
                    font-style: italic;
                    font-size: medium;
                    // width: 80%;
                    &>* {
                        white-space: normal;
                    }
                }
            }
        }

        .job-results, .job-messages {
            div:first-child:has(h2) {
                display: flex;
                flex-direction: row;
                gap: var(--pad);
                align-items: center;

                h2 + a.filelink, h2 + a.loglink {
                    font-size: smaller;
                    margin-bottom: -3px;
                }
            }
           
        }
        .form-buttons {
            display: flex;
            flex-direction: line;
            gap: var(--pad);
            margin-bottom: calc(var(--pad) * 0.5);
        }
    }
}

.visuallyhidden:not(:focus):not(:active) {
    position: absolute;
    top:0;
    left:0;
  
    width: 1px;
    height: 1px;
    margin: -1px;
    border: 0;
    padding: 0;
  
    white-space: nowrap;
  
    clip-path: inset(100%);
    clip: rect(0 0 0 0);
    overflow: hidden;
  }

.field-errors {
    background-color: var(--error-bg);
    color: var(--error-fg);
    font-weight: bold;
    padding: 0.5em;
}

.new-job {
    input[type=text] {
        width: 25rem;
        font-size: large;
    }
    input[type=checkbox] {
        flex-basis: 2rem;
        accent-color: var(--select);
    }
    input[type=number] {
        width: min-content;
        font-size: large;
    }
    select {
        font-size: large;
        border: thin solid;
        border-radius: 4px;
        width: 25rem;
    }
    div.multi-file-or-folder, div.file-or-folder {
        .controls-row {
            display: flex;
            gap: var(--pad);
        }
    }
    button.multi-file-or-folder {
        height: 2rem;
        width: 2rem;
        padding: 3px;
    }

    input.interacted:invalid ~ span.field-errors::before,
    div:has(input.interacted:invalid) ~ span.field-errors::before {
        content: "Invalid value";
        color: var(--warning);
    }
    .field-errors {
        display: block;
        align-self: center;
    }
    .select-script {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: calc(var(--pad)*2);
        font-size: x-large;
        
        
        border-bottom: thin solid var(--fg-mix);
        padding-top: calc(var(--pad));
        padding-bottom: calc(var(--pad));
        padding-left: 2px;
        align-items: center;

        &>div {
            display: flex;
            gap: calc(var(--pad)/2);
        }
    }

    form {
        display: flex;
        flex-direction: column;
        gap: calc(var(--pad) * 2);
        overflow-y: scroll;

        .form-sections {
            display: flex;
            flex-direction: column;
            gap: 8%;
            section {
                width: 70%;
            }
            overflow-y: scroll;

            ul.fields {
                gap: var(--pad);
                
                select {
                    width: min-content;
                }
                .custom-field {
                    // display: flex;
                    // flex-direction: row;
                    gap: var(--pad);

                    details {
                        display: inline-block;
                        font-style: italic;
                        font-size: small;
                    }
                }

                .documentation {
                    ul {
                        list-style-type:circle;
                        margin: var(--pad);
                    }

                    .details {
                        margin: var(--pad);
                    }
                }

                .optional-value {
                    flex-direction: row;
                    display: flex;
                    align-items: center;
                }
                label button {
                    border: none;
                    text-decoration: underline;
                    font-size: normal;
                    padding: 0;
                }
                
            }
        }    
        .form-buttons {
            display: flex;
            flex-direction: row;
            gap: var(--pad);
        }    
    }
}

/* settings dialog */
.confirm-save {
    font-size: smaller;
    font-style: italic;
}

/* about box */
main.about {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1em;
    height: 100%;
    .info {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%;
        margin-bottom: var(--pad);
        p.versions {
            display: flex;
            flex-direction: row;
            gap: 0.25em;
            width: 90%;
            margin: 0;
        }    
        button.copy {
            border: none;
            align-self: center;
        }
        button.copy:hover {
            background-color: var(--bg);
            color: var(--select-mix);
        }
        .actions {
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }
        .actions > div {
            display: flex;
            flex-direction: row;
            justify-content: space-around;
            margin-top: 0.5rem;
        }
        
        .actions p {
            display: block;
            margin: 0;
            margin-bottom: 1em;
            margin-bottom: 0;
            width: 80%;
        }
        .actions > progress {
            width: 100%;
        }
        .actions:last-child{
            margin-right: 0em;
        }
    }
}

input.grayedout {
    color: gray;
    background: white;
}
button.grayedout {
    color: gray;
    background: inherit;
}

button.grayedout:hover {
    background: none !important;
}